# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import custom_pb2 as custom__pb2


class CustomServiceStub(object):
    """The Custom service is for APIs that do not map to the "standard library" of
    DCS APIs provided by Eagle Dynamics.

    Expect to find APIs here that may be useful for mission frameworks etc.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RequestMissionAssignment = channel.unary_unary(
                '/dcs.custom.v0.CustomService/RequestMissionAssignment',
                request_serializer=custom__pb2.RequestMissionAssignmentRequest.SerializeToString,
                response_deserializer=custom__pb2.RequestMissionAssignmentResponse.FromString,
                )
        self.JoinMission = channel.unary_unary(
                '/dcs.custom.v0.CustomService/JoinMission',
                request_serializer=custom__pb2.JoinMissionRequest.SerializeToString,
                response_deserializer=custom__pb2.JoinMissionResponse.FromString,
                )
        self.AbortMission = channel.unary_unary(
                '/dcs.custom.v0.CustomService/AbortMission',
                request_serializer=custom__pb2.AbortMissionRequest.SerializeToString,
                response_deserializer=custom__pb2.AbortMissionResponse.FromString,
                )
        self.GetMissionStatus = channel.unary_unary(
                '/dcs.custom.v0.CustomService/GetMissionStatus',
                request_serializer=custom__pb2.GetMissionStatusRequest.SerializeToString,
                response_deserializer=custom__pb2.GetMissionStatusResponse.FromString,
                )
        self.Eval = channel.unary_unary(
                '/dcs.custom.v0.CustomService/Eval',
                request_serializer=custom__pb2.EvalRequest.SerializeToString,
                response_deserializer=custom__pb2.EvalResponse.FromString,
                )
        self.GetMagneticDeclination = channel.unary_unary(
                '/dcs.custom.v0.CustomService/GetMagneticDeclination',
                request_serializer=custom__pb2.GetMagneticDeclinationRequest.SerializeToString,
                response_deserializer=custom__pb2.GetMagneticDeclinationResponse.FromString,
                )


class CustomServiceServicer(object):
    """The Custom service is for APIs that do not map to the "standard library" of
    DCS APIs provided by Eagle Dynamics.

    Expect to find APIs here that may be useful for mission frameworks etc.
    """

    def RequestMissionAssignment(self, request, context):
        """DCT Function
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinMission(self, request, context):
        """DCT Function
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AbortMission(self, request, context):
        """DCT Function
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMissionStatus(self, request, context):
        """DCT Function
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Eval(self, request, context):
        """Evaluate some Lua inside of the mission and return the result as a JSON
        string. Disabled by default.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMagneticDeclination(self, request, context):
        """*
        Calculates the magnetic declination at the given position using the
        International Geomagnetic Reference Field (IGRF) model. The result is not
        always exactly the same as what DCS seem to use, but it is very close (DCS
        doesn't expose its declination).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RequestMissionAssignment': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestMissionAssignment,
                    request_deserializer=custom__pb2.RequestMissionAssignmentRequest.FromString,
                    response_serializer=custom__pb2.RequestMissionAssignmentResponse.SerializeToString,
            ),
            'JoinMission': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinMission,
                    request_deserializer=custom__pb2.JoinMissionRequest.FromString,
                    response_serializer=custom__pb2.JoinMissionResponse.SerializeToString,
            ),
            'AbortMission': grpc.unary_unary_rpc_method_handler(
                    servicer.AbortMission,
                    request_deserializer=custom__pb2.AbortMissionRequest.FromString,
                    response_serializer=custom__pb2.AbortMissionResponse.SerializeToString,
            ),
            'GetMissionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMissionStatus,
                    request_deserializer=custom__pb2.GetMissionStatusRequest.FromString,
                    response_serializer=custom__pb2.GetMissionStatusResponse.SerializeToString,
            ),
            'Eval': grpc.unary_unary_rpc_method_handler(
                    servicer.Eval,
                    request_deserializer=custom__pb2.EvalRequest.FromString,
                    response_serializer=custom__pb2.EvalResponse.SerializeToString,
            ),
            'GetMagneticDeclination': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMagneticDeclination,
                    request_deserializer=custom__pb2.GetMagneticDeclinationRequest.FromString,
                    response_serializer=custom__pb2.GetMagneticDeclinationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dcs.custom.v0.CustomService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomService(object):
    """The Custom service is for APIs that do not map to the "standard library" of
    DCS APIs provided by Eagle Dynamics.

    Expect to find APIs here that may be useful for mission frameworks etc.
    """

    @staticmethod
    def RequestMissionAssignment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.custom.v0.CustomService/RequestMissionAssignment',
            custom__pb2.RequestMissionAssignmentRequest.SerializeToString,
            custom__pb2.RequestMissionAssignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JoinMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.custom.v0.CustomService/JoinMission',
            custom__pb2.JoinMissionRequest.SerializeToString,
            custom__pb2.JoinMissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AbortMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.custom.v0.CustomService/AbortMission',
            custom__pb2.AbortMissionRequest.SerializeToString,
            custom__pb2.AbortMissionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMissionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.custom.v0.CustomService/GetMissionStatus',
            custom__pb2.GetMissionStatusRequest.SerializeToString,
            custom__pb2.GetMissionStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Eval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.custom.v0.CustomService/Eval',
            custom__pb2.EvalRequest.SerializeToString,
            custom__pb2.EvalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMagneticDeclination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.custom.v0.CustomService/GetMagneticDeclination',
            custom__pb2.GetMagneticDeclinationRequest.SerializeToString,
            custom__pb2.GetMagneticDeclinationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
